import React, { useState } from 'react';
import { 
  View, 
  Text, 
  StyleSheet, 
  ScrollView, 
  TouchableOpacity,
  Image
} from 'react-native';
import { useLocalSearchParams, useRouter, Stack } from 'expo-router';
import { 
  Star, 
  Clock, 
  Calendar, 
  Video, 
  Phone, 
  MessageSquare,
  ChevronRight,
  ArrowLeft,
  MapPin
} from 'lucide-react-native';
import { doctors } from '@/mocks/doctors';
import { Button } from '@/components/Button';
import { colors } from '@/constants/colors';

export default function DoctorDetailsScreen() {
  const { id } = useLocalSearchParams<{ id: string }>();
  const router = useRouter();
  
  const doctor = doctors.find(d => d.id === id);
  
  if (!doctor) {
    return (
      <View style={styles.notFoundContainer}>
        <Text style={styles.notFoundText}>Doctor not found</Text>
        <Button 
          title="Go Back" 
          onPress={() => router.back()}
        />
      </View>
    );
  }
  
  const [selectedConsultationType, setSelectedConsultationType] = useState<'video' | 'voice' | 'text'>('video');
  
  const handleBookConsultation = () => {
    router.push(`/book-consultation/${doctor.id}?type=${selectedConsultationType}`);
  };
  
  return (
    <ScrollView 
      style={styles.container}
      contentContainerStyle={styles.contentContainer}
      showsVerticalScrollIndicator={false}
    >
      <Stack.Screen 
        options={{
          title: '',
          headerLeft: () => (
            <TouchableOpacity 
              onPress={() => router.back()}
              style={styles.backButton}
            >
              <ArrowLeft size={24} color={colors.primary} />
            </TouchableOpacity>
          ),
        }} 
      />
      
      <View style={styles.header}>
        <Image 
          source={{ uri: doctor.imageUrl }} 
          style={styles.doctorImage} 
        />
        
        <View style={styles.doctorInfo}>
          <Text style={styles.doctorName}>{doctor.name}</Text>
          <Text style={styles.doctorSpecialty}>{doctor.specialty}</Text>
          
          <View style={styles.ratingContainer}>
            <Star size={16} color={colors.warning} fill={colors.warning} />
            <Text style={styles.rating}>{doctor.rating}</Text>
            <Text style={styles.reviewsCount}>(120+ reviews)</Text>
          </View>
          
          <View style={styles.locationContainer}>
            <MapPin size={16} color={colors.secondary} />
            <Text style={styles.location}>{doctor.location}</Text>
          </View>
          
          <View style={styles.languagesContainer}>
            <Text style={styles.languagesLabel}>Languages: </Text>
            <Text style={styles.languages}>{doctor.languages.join(', ')}</Text>
          </View>
        </View>
      </View>
      
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>About</Text>
        <Text style={styles.aboutText}>
          {doctor.name} is an experienced {doctor.specialty.toLowerCase()} specialist with over 10 years of practice. 
          Specializing in providing accessible healthcare to underserved communities in {doctor.location}, 
          {doctor.name.split(' ')[0]} is committed to patient education and preventive care.
        </Text>
      </View>
      
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Availability</Text>
        <View style={styles.availabilityContainer}>
          <View style={styles.availabilityItem}>
            <Clock size={20} color={colors.primary} />
            <Text style={styles.availabilityText}>{doctor.availability}</Text>
          </View>
          <View style={styles.availabilityItem}>
            <Calendar size={20} color={colors.primary} />
            <Text style={styles.availabilityText}>Mon-Fri, 9AM-5PM</Text>
          </View>
        </View>
      </View>
      
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Consultation Type</Text>
        <View style={styles.consultationTypes}>
          <TouchableOpacity 
            style={[
              styles.consultationType,
              selectedConsultationType === 'video' && styles.selectedConsultationType
            ]}
            onPress={() => setSelectedConsultationType('video')}
          >
            <Video 
              size={24} 
              color={selectedConsultationType === 'video' ? colors.card : colors.primary} 
            />
            <Text style={[
              styles.consultationTypeText,
              selectedConsultationType === 'video' && styles.selectedConsultationTypeText
            ]}>
              Video
            </Text>
          </TouchableOpacity>
          
          <TouchableOpacity 
            style={[
              styles.consultationType,
              selectedConsultationType === 'voice' && styles.selectedConsultationType
            ]}
            onPress={() => setSelectedConsultationType('voice')}
          >
            <Phone 
              size={24} 
              color={selectedConsultationType === 'voice' ? colors.card : colors.primary} 
            />
            <Text style={[
              styles.consultationTypeText,
              selectedConsultationType === 'voice' && styles.selectedConsultationTypeText
            ]}>
              Voice
            </Text>
          </TouchableOpacity>
          
          <TouchableOpacity 
            style={[
              styles.consultationType,
              selectedConsultationType === 'text' && styles.selectedConsultationType
            ]}
            onPress={() => setSelectedConsultationType('text')}
          >
            <MessageSquare 
              size={24} 
              color={selectedConsultationType === 'text' ? colors.card : colors.primary} 
            />
            <Text style={[
              styles.consultationTypeText,
              selectedConsultationType === 'text' && styles.selectedConsultationTypeText
            ]}>
              Text
            </Text>
          </TouchableOpacity>
        </View>
      </View>
      
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Patient Reviews</Text>
        <TouchableOpacity style={styles.reviewsButton}>
          <Text style={styles.reviewsButtonText}>View all reviews</Text>
          <ChevronRight size={20} color={colors.primary} />
        </TouchableOpacity>
      </View>
      
      <View style={styles.footer}>
        <View style={styles.priceContainer}>
          <Text style={styles.priceLabel}>Consultation Fee</Text>
          <Text style={styles.price}>â‚¹{doctor.price}</Text>
        </View>
        
        <Button 
          title="Book Consultation" 
          onPress={handleBookConsultation}
          style={styles.bookButton}
        />
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: colors.background,
  },
  contentContainer: {
    padding: 16,
    paddingBottom: 32,
  },
  backButton: {
    padding: 8,
  },
  header: {
    flexDirection: 'row',
    marginBottom: 24,
  },
  doctorImage: {
    width: 100,
    height: 100,
    borderRadius: 12,
  },
  doctorInfo: {
    flex: 1,
    marginLeft: 16,
    justifyContent: 'center',
  },
  doctorName: {
    fontSize: 20,
    fontWeight: '700',
    color: colors.text,
    marginBottom: 4,
  },
  doctorSpecialty: {
    fontSize: 16,
    color: colors.textSecondary,
    marginBottom: 8,
  },
  ratingContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  rating: {
    fontSize: 14,
    color: colors.text,
    marginLeft: 4,
    fontWeight: '500',
  },
  reviewsCount: {
    fontSize: 14,
    color: colors.textSecondary,
    marginLeft: 4,
  },
  locationContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  location: {
    fontSize: 14,
    color: colors.secondary,
    marginLeft: 6,
    fontWeight: '500',
  },
  languagesContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  languagesLabel: {
    fontSize: 14,
    color: colors.text,
    fontWeight: '500',
  },
  languages: {
    fontSize: 14,
    color: colors.textSecondary,
  },
  section: {
    marginBottom: 24,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: colors.text,
    marginBottom: 12,
  },
  aboutText: {
    fontSize: 14,
    color: colors.textSecondary,
    lineHeight: 22,
  },
  availabilityContainer: {
    backgroundColor: colors.card,
    borderRadius: 12,
    padding: 16,
  },
  availabilityItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  availabilityText: {
    fontSize: 14,
    color: colors.text,
    marginLeft: 12,
  },
  consultationTypes: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  consultationType: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: colors.primary + '10',
    paddingVertical: 16,
    borderRadius: 12,
    marginHorizontal: 4,
  },
  selectedConsultationType: {
    backgroundColor: colors.primary,
  },
  consultationTypeText: {
    fontSize: 14,
    color: colors.primary,
    marginTop: 8,
    fontWeight: '500',
  },
  selectedConsultationTypeText: {
    color: colors.card,
  },
  reviewsButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    backgroundColor: colors.card,
    padding: 16,
    borderRadius: 12,
  },
  reviewsButtonText: {
    fontSize: 14,
    color: colors.primary,
    fontWeight: '500',
  },
  footer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 8,
  },
  priceContainer: {
    flex: 1,
  },
  priceLabel: {
    fontSize: 14,
    color: colors.textSecondary,
  },
  price: {
    fontSize: 24,
    fontWeight: '700',
    color: colors.text,
  },
  bookButton: {
    flex: 1,
    marginLeft: 16,
  },
  notFoundContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 24,
  },
  notFoundText: {
    fontSize: 18,
    color: colors.textSecondary,
    marginBottom: 16,
  },
});